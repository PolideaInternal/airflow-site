:mod:`airflow.gcp.sensors.bigtable`
===================================

.. py:module:: airflow.gcp.sensors.bigtable

.. autoapi-nested-parse::

   This module contains Google Cloud Bigtable sensor.



Module Contents
---------------

.. py:class:: BigtableTableWaitForReplicationSensor(instance_id:str, table_id:str, project_id:Optional[str]=None, gcp_conn_id:str='google_cloud_default', *args, **kwargs)

   Bases: :class:`airflow.sensors.base_sensor_operator.BaseSensorOperator`, :class:`airflow.gcp.operators.bigtable.BigtableValidationMixin`

   Sensor that waits for Cloud Bigtable table to be fully replicated to its clusters.
   No exception will be raised if the instance or the table does not exist.

   For more details about cluster states for a table, have a look at the reference:
   https://googleapis.github.io/google-cloud-python/latest/bigtable/table.html#google.cloud.bigtable.table.Table.get_cluster_states

   .. seealso::
       For more information on how to use this operator, take a look at the guide:
       :ref:`howto/operator:BigtableTableWaitForReplicationSensor`

   :type instance_id: str
   :param instance_id: The ID of the Cloud Bigtable instance.
   :type table_id: str
   :param table_id: The ID of the table to check replication status.
   :type project_id: str
   :param project_id: Optional, the ID of the GCP project.

   .. attribute:: REQUIRED_ATTRIBUTES
      :annotation: = ['instance_id', 'table_id']

      

   .. attribute:: template_fields
      :annotation: = ['project_id', 'instance_id', 'table_id']

      

   
   .. method:: poke(self, context)




